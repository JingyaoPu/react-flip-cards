{"version":3,"sources":["AC.png","AD.png","AH.png","7D.png","5S.png","5C.png","blue_back.png","App.js","App.card.js","App.cards.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Card","props","className","flipped","onClick","_","flip","ele","value","index","onMouseLeave","examine","src","back","alt","Cards","useState","AC","_5C","AD","_5S","_7D","AH","cardArray","setcardArray","cardState","setCardState","pair","setPair","useEffect","cards","i","length","j","Math","floor","random","temp","reset","preState","try_flip","includes","p","filter","e","JSON","stringify","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c79fd2ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AC.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/AD.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/AH.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/7D.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/5S.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/5C.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_back.8a890151.png\";","import React from 'react';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {i: 0};\n  }\n\n  colors = ['blue','red','grey'];\n  componentDidMount() {\n    setInterval(()=>{\n      let i = this.state.i;\n      if(i===this.colors.length) i=0;\n      else i++;\n      this.setState({i:i})\n    },1000);\n  }\n\n\nrender(){\n  return (\n      <div >\n        <h1 style={{color:this.colors[this.state.i]}}>Hello, world! 123</h1>\n      </div>\n  );\n}\n}\n\n\nexport default App;\n","import React, { useState } from \"react\";\nimport back from \"./blue_back.png\"\nimport './card.css';\nfunction Card(props) {\n    return (\n        <div className=\"flip-card\" >\n            <div className={props.flipped?\"flip-card-inner-flipped\":'flip-card-inner'} onClick={_=>props.flip(props.ele.value,props.ele.index)} onMouseLeave={_=>props.examine()}>\n                <div className={\"flip-card-back\"}>\n                    <img src={back}  alt={\"back\"} />\n                </div>\n                <div className={\"flip-card-front\"}>\n                    <img src={props.ele.src} alt={\"front\"}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n\n","import React, { useState,useEffect } from \"react\";\nimport Card from './App.card';\nimport AC from \"./AC.png\";\nimport AD from \"./AD.png\";\nimport AH from \"./AH.png\";\nimport _7D from \"./7D.png\";\nimport _5S from \"./5S.png\";\nimport _5C from \"./5C.png\";\n\nfunction Cards(props) {\n    const [cardArray, setcardArray] = useState([\n        {value:\"AC\",index:0,src:AC},\n        {value:\"_5C\",index:0,src:_5C},\n        {value:\"AD\",index:0,src:AD},\n        {value:\"_5S\",index:0,src:_5S},\n        {value:\"_7D\",index:1,src:_7D},\n        {value:\"AC\",index:1,src:AC},\n        {value:\"AH\",index:0,src:AH},\n        {value:\"_7D\",index:0,src:_7D},\n        {value:\"AD\",index:1,src:AD},\n        {value:\"AH\",index:1,src:AH},\n        {value:\"_5S\",index:1,src:_5S},\n        {value:\"_5C\",index:1,src:_5C},\n    ])\n    const [cardState, setCardState] = useState(\n        {\n            AC:{flipped:[false,false]},\n            AD:{flipped:[false,false]},\n            AH:{flipped:[false,false]},\n            _5S:{flipped:[false,false]},\n            _5C:{flipped:[false,false]},\n            _7D:{flipped:[false,false]},\n        }\n    )\n    const reset = ()=>{\n        let cards = cardArray;\n        for(let i = cards.length-1; i > 0; i--){\n            const j = Math.floor(Math.random() * i)\n            const temp = cards[i]\n            cards[i] = cards[j]\n            cards[j] = temp\n        }\n        setcardArray([...cards]);\n    }\n\n    const [pair, setPair] = useState([])\n\n    useEffect(()=>{\n        reset();\n    },[])\n\n\n    const flip = (value, index)=>{\n        let preState = cardState;\n        preState[value].flipped[index] = !preState[value].flipped[index];\n        setCardState({...preState});\n    }\n    const examine = ()=>{\n        if(pair.length === 2){\n            if (pair[0].value !== pair[1].value){\n                    flip(pair[0].value,pair[0].index);\n                    flip(pair[1].value,pair[1].index);\n            }\n            setPair([]);\n        }\n    }\n\n    const try_flip = (value, index)=>{\n        if(cardState[value].flipped.includes(false)){\n            if(cardState[value].flipped[index] === true){\n                const p = pair.filter(e=>e.value !== value);\n                setPair(p);\n            }else{\n                setPair([...pair,{value:value,index:index}]);\n            }\n            flip(value, index);\n        }\n    }\n\n    return (\n        <div>\n        <span>{JSON.stringify(cardState)}</span>\n        <span>{JSON.stringify(pair)}</span>\n        <div className = \"cards-container\">\n            {cardArray.map(e=>\n                <Card ele = {e} flipped = {cardState[e.value].flipped[e.index]} flip = {try_flip} examine = {examine}/>\n                )}\n        </div>\n        </div>\n\n    )\n}\nexport default Cards;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Cards from './App.cards'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Cards />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}